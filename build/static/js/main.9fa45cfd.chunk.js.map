{"version":3,"sources":["utils/const.js","utils/common.js","reducer/notes/notes.js","reducer/search/search.js","reducer/interface/interface.js","reducer/name-space.js","reducer/reducer.js","history.js","reducer/notes/selectors.js","components/note-preview-card/note-preview-card.jsx","components/note-preview-list/note-preview-list.jsx","components/rich-editor/rich-editor.jsx","components/note-action-list/note-action-list.jsx","reducer/search/selectors.js","components/search/search.jsx","components/add-note/add-note.jsx","components/note-menu-button/note-menu-button.jsx","components/folder-item/folder-item.js","reducer/interface/selectors.js","components/sidebar/sidebar.jsx","components/main/main.jsx","components/app/app.jsx","index.js","reducer/local-storage.js"],"names":["Note","id","createdDate","activeFolder","this","name","text","tags","inFolders","extend","a","b","Object","assign","useFirstRender","firstRender","useRef","useEffect","current","createNote","setNotes","setNewNoteId","creationDate","Date","newNote","Math","random","toString","slice","initialState","notes","isActive","folders","canBeDeleted","hasInitialNotesSet","filteredNotes","activeNote","newNoteId","showMoreNotes","notesToShow","editorState","ActionType","ActionCreator","type","payload","number","note","searchInput","input","isSidebarOpen","NameSpace","NOTES","SEARCH","INTERFACE","combineReducers","state","action","filter","emptyNotes","includes","folderToDelete","folder","map","history","createBrowserHistory","getNotes","getFolders","getHasInitialNotesSet","getFilteredNotes","getActiveNote","getActiveFolder","getNewNoteId","connect","dispatch","setActiveNote","ActionCreatorNotes","key","className","onClick","onNoteItemClick","string","newString","length","indexOf","getFirstLineFromString","setNotesNumberToShow","deleteNotes","useState","noteArrayNumber","setNoteArrayNumber","count","setCount","prevCount","value","ref","usePrevious","find","index","Fragment","setNoteText","EditorState","createWithContent","ContentState","createFromText","x","createEmpty","setEditorState","moveFocusToEnd","calcState","mappedBlocks","convertToRaw","getCurrentContent","blocks","block","trim","newText","i","onChange","handleKeyCommand","command","newEditorState","RichUtils","insertSoftNewline","deleteNote","changeSidebarState","ActionCreatorInterface","width","getSearchInput","setFilteredNotes","setSearchInput","ActionCreatorSearch","arrayToFilter","filteredArray","toUpperCase","event","currentTarget","onSearchInputChange","placeholder","FolderItem","folderName","isDeleteMode","folderClickHandler","deleteCallback","e","getIsSidebarOpen","addFolder","deleteFolder","setActiveFolder","isNewFolderCreationMode","isFolderDeleteMode","sidebarUIState","changeSidebarUIState","deleteFolderButtonClickHandler","stopPropagation","onKeyDown","keyCode","closeSidebarOnKeydown","noteCount","addCallback","autoFocus","minlength","maxlength","onBlur","target","window","innerWidth","setWidth","innerHeight","height","setHeight","filteredByFolderNotes","setFilteredByFolderNotes","addEventListener","updateWidthAndHeight","removeEventListener","handleResize","_debounce","style","display","changeHasInitialNotesSetFlag","exact","path","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","store","createStore","reducer","applyMiddleware","thunk","subscribe","throttle","serializesState","stringify","setItem","console","log","saveState","getState","ReactDOM","render","basename","process","document","querySelector"],"mappings":"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","file":"static/js/main.9fa45cfd.chunk.js","sourcesContent":["export const notes = [\n  {\n    name: '',\n    id: 0,\n    text: `Overview проектa NewNote:\nЭто приложение мой личный Pet Project.\n\n- Оно адаптировано как для пк, так и для планшетов и телефонов \n\n- У приложения Следующий функционал:\n  • Возможность создавать и редактировать Заметки\n  • Возможность искать заметки \n  • Возможность создавть папки и удалять их\n  • Данные сохраняются через Local Storage\n`,\n    tags: [],\n    inFolders: ['Все Заметки'],\n    createdDate: '',\n    isActive: true,\n  },\n  {\n    name: '',\n    id: 1,\n    text: `Заметка без смысла\n\nС другой стороны реализация намеченных плановых заданий требуют от нас анализа новых предложений. Товарищи! новая модель организационной деятельности позволяет оценить значение соответствующий условий активизации. Значимость этих проблем настолько очевидна, что начало повседневной работы по формированию позиции позволяет оценить значение новых предложений. Равным образом сложившаяся структура организации требуют от нас анализа новых предложений. Не следует, однако забывать, что реализация намеченных плановых заданий требуют от нас анализа форм развития.    `,\n    tags: [],\n    inFolders: ['Все Заметки'],\n    createdDate: '',\n    isActive: false,\n  },\n]\n\nexport const folders = [\n  {\n    name: 'Все Заметки',\n    canBeDeleted: false,\n  }\n]\n\nexport function Note(id, createdDate, activeFolder) {\n  this.name = '';\n  this.id = id;\n  this.text = `Новая заметка`;\n  this.tags = [];\n  if (activeFolder === 'Все Заметки') {\n    this.inFolders = [activeFolder]\n  } else {\n    this.inFolders = ['Все Заметки', activeFolder]\n  }\n  this.createdDate = createdDate;\n}\n\nexport const MAX_PREVIEW_LINE_LENGTH = 40;\nexport const MOBILE_BREAKPOINT = 768;\n","import { useRef, useEffect } from 'react';\nimport {Note} from \"./const\";\n\nexport const extend = (a, b) => {\n  return Object.assign({}, a, b);\n};\n\n\nexport function useFirstRender() {\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    firstRender.current = false;\n  }, []);\n\n  return firstRender.current;\n}\n\nexport function usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nexport function createNote(setNotes, setNewNoteId, activeFolder) {\n  const creationDate = new Date();\n  // Generating ID using current Date\n  const id = \"id\" + Math.random().toString(16).slice(2)\n  // Creating Empty Note\n  const newNote = new Note(id, creationDate, activeFolder)\n\n  setNotes(newNote)\n  setNewNoteId(newNote.id);\n}\n\nexport function getWidth() {\n  return Math.max(\n    document.body.scrollWidth,\n    document.documentElement.scrollWidth,\n    document.body.offsetWidth,\n    document.documentElement.offsetWidth,\n    document.documentElement.clientWidth\n  );\n}\n\nexport function getHeight() {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.documentElement.clientHeight\n  );\n}\n","import {extend} from \"../../utils/common.js\";\nimport {notes, folders} from \"../../utils/const.js\";\n\nexport const initialState = {\n  notes: notes,\n  folders: folders,\n  hasInitialNotesSet: false,\n  filteredNotes: null,\n  activeNote: null,\n  activeFolder: 'Все Заметки',\n  newNoteId: null,\n  showMoreNotes: 10,\n  notesToShow: 10,\n  editorState: null,\n};\n\nexport const ActionType = {\n  SET_NOTES: `SET_NOTES`,\n  DELETE_NOTE: `DELETE_NOTE`,\n  DELETE_NOTES: `DELETE_NOTES`,\n  ADD_FOLDER: `ADD_FOLDER`,\n  DELETE_FOLDER: `DELETE_FOLDER`,\n  SET_NEW_NOTE_ID: `SET_NEW_NOTE_ID`,\n  SET_NOTES_NUMBER_TO_SHOW: `SET_NOTES_NUMBER_TO_SHOW`,\n  SET_FILTERED_NOTES: `SET_FILTERED_NOTES`,\n  SET_NOTE_TEXT: `SET_NOTE_TEXT`,\n  SET_ACTIVE_NOTE: `SET_ACTIVE_NOTE`,\n  SET_ACTIVE_FOLDER: `SET_ACTIVE_FOLDER`,\n  SET_EDITOR_STATE: `SET_EDITOR_STATE`,\n  CHANGE_HAS_INITIAL_NOTES_SET_FLAG: `CHANGE_HAS_INITIAL_NOTES_SET_FLAG`,\n}\n\nexport const ActionCreator = {\n  setNotes: (notes) => ({\n    type: ActionType.SET_NOTES,\n    payload: notes,\n  }),\n\n  deleteNote: (notes) => ({\n    type: ActionType.DELETE_NOTE,\n    payload: notes,\n  }),\n\n  deleteNotes: (notes) => ({\n    type: ActionType.DELETE_NOTES,\n    payload: notes,\n  }),\n\n  addFolder: (notes) => ({\n    type: ActionType.ADD_FOLDER,\n    payload: notes,\n  }),\n\n  deleteFolder: (notes) => ({\n    type: ActionType.DELETE_FOLDER,\n    payload: notes,\n  }),\n\n  setNewNoteId: (id) => ({\n    type: ActionType.SET_NEW_NOTE_ID,\n    payload: id,\n  }),\n\n  setActiveNote: (id) => ({\n    type: ActionType.SET_ACTIVE_NOTE,\n    payload: id,\n  }),\n\n  setActiveFolder: (id) => ({\n    type: ActionType.SET_ACTIVE_FOLDER,\n    payload: id,\n  }),\n\n\n  setNotesNumberToShow: (number) => ({\n    type: ActionType.SET_NOTES_NUMBER_TO_SHOW,\n    payload: number,\n  }),\n\n  setFilteredNotes: (notes) => ({\n    type: ActionType.SET_FILTERED_NOTES,\n    payload: notes,\n  }),\n\n  setNoteText: ({note, text}) => ({\n    type: ActionType.SET_NOTE_TEXT,\n    payload: {note: note, text: text},\n  }),\n\n  changeHasInitialNotesSetFlag: () => ({\n    type: ActionType.CHANGE_HAS_INITIAL_NOTES_SET_FLAG,\n  }),\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case ActionType.SET_NOTES:\n      return extend(state, {notes: [...state.notes, action.payload]});\n\n    case ActionType.DELETE_NOTE:\n      const id = action.payload.id\n      return extend(state, {\n        notes: state.notes.filter((note) => note.id !== id)\n      })\n\n    case ActionType.DELETE_NOTES:\n      const emptyNotes = action.payload\n      return extend(state, {\n        notes: state.notes.filter(note => !emptyNotes.includes(note))\n      })\n\n    case ActionType.ADD_FOLDER:\n      return extend(state, {\n        folders: [...state.folders, action.payload]\n      })\n\n    case ActionType.DELETE_FOLDER:\n      const folderToDelete = action.payload;\n      return extend(state, {\n        folders: state.folders.filter(folder => folder.name !== folderToDelete)\n      })\n\n    case ActionType.SET_NEW_NOTE_ID:\n      return extend(state, {newNoteId: action.payload});\n\n    case ActionType.SET_NOTES_NUMBER_TO_SHOW:\n      return extend(state, {notesToShow: state.notesToShow + action.payload});\n\n    case ActionType.SET_FILTERED_NOTES:\n      return extend(state, {filteredNotes: action.payload})\n\n    case ActionType.SET_ACTIVE_NOTE:\n      return extend(state, {\n        activeNote: action.payload,\n      })\n\n    case ActionType.SET_ACTIVE_FOLDER:\n      return extend(state, {\n        activeFolder: action.payload,\n      })\n\n    case ActionType.CHANGE_HAS_INITIAL_NOTES_SET_FLAG:\n      return extend(state, {hasInitialNotesSet: !state.hasInitialNotesSet})\n\n    case ActionType.SET_NOTE_TEXT:\n      return extend(state, {\n        notes: state.notes.map((note) => {\n          if (note.id === action.payload.note.id) {\n            return extend(note, {\n              text: action.payload.text,\n            })\n          }\n          return note;\n        }),\n      });\n    default:\n      return state;\n  }\n};\n","import {extend} from \"../../utils/common.js\";\n\nexport const initialState = {\n  searchInput: '',\n};\n\nexport const ActionType = {\n  SET_SEARCH_INPUT: `SET_SEARCH_INPUT`,\n}\n\nexport const ActionCreator = {\n  setSearchInput: (input) => ({\n    type: ActionType.SET_SEARCH_INPUT,\n    payload: input,\n  }),\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.SET_SEARCH_INPUT:\n      return extend(state, {searchInput: action.payload});\n    default:\n      return state;\n  }\n};\n","import {extend} from \"../../utils/common.js\";\n\nexport const initialState = {\n  isSidebarOpen: false,\n};\n\nexport const ActionType = {\n  CHANGE_SIDEBAR_STATE: `CHANGE_SIDEBAR_STATE`,\n}\n\nexport const ActionCreator = {\n  changeSidebarState: () => ({\n    type: ActionType.CHANGE_SIDEBAR_STATE,\n  }),\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.CHANGE_SIDEBAR_STATE:\n      return extend(state, {isSidebarOpen: !state.isSidebarOpen});\n    default:\n      return state;\n  }\n};\n","const NameSpace = {\n  NOTES: `NOTES`,\n  SEARCH: `SEARCH`,\n  INTERFACE: `INTERFACE`,\n};\n\nexport default NameSpace;\n","import {reducer as reducerNotes} from \"./notes/notes.js\";\nimport {reducer as reducerSearch} from \"./search/search.js\";\nimport {reducer as reducerInterface} from \"./interface/interface.js\";\nimport NameSpace from \"./name-space.js\";\nimport {combineReducers} from \"redux\";\n\nexport default combineReducers({\n  [NameSpace.NOTES]: reducerNotes,\n  [NameSpace.SEARCH]: reducerSearch,\n  [NameSpace.INTERFACE]: reducerInterface,\n});\n","import {createBrowserHistory} from \"history\";\nimport {Provider} from \"react-redux\";\n\n// eslint-disable-next-line new-cap\nconst history = new createBrowserHistory();\n\nexport default history;","import NameSpace from './../name-space.js';\n\nexport const getNotes = (state) => state[NameSpace.NOTES].notes;\nexport const getFolders = (state) => state[NameSpace.NOTES].folders;\nexport const getHasInitialNotesSet = (state) => state[NameSpace.NOTES].hasInitialNotesSet;\nexport const getFilteredNotes = (state) => state[NameSpace.NOTES].filteredNotes;\nexport const getActiveNote = (state) => state[NameSpace.NOTES].activeNote;\nexport const getActiveFolder = (state) => state[NameSpace.NOTES].activeFolder;\nexport const getNewNoteId = (state) => state[NameSpace.NOTES].newNoteId;\nexport const getShowMoreNotes = (state) => state[NameSpace.NOTES].showMoreNotes;\nexport const getEditorState = (state) => state[NameSpace.NOTES].editorState;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {ActionCreator as ActionCreatorNotes} from '../../reducer/notes/notes.js';\nimport {MAX_PREVIEW_LINE_LENGTH} from '../../utils/const'\nimport {getActiveNote} from \"../../reducer/notes/selectors.js\";\n\n\nfunction NotePreviewCard({note, key, setActiveNote, activeNote}) {\n\n  const onNoteItemClick = (note) => {\n    setActiveNote(note);\n  }\n\n  const getFirstLineFromString = (string) => {\n    let newString = string;\n\n    if (newString && newString.length > MAX_PREVIEW_LINE_LENGTH) {\n      return newString.slice(0, newString.indexOf('\\n'))\n      // return newString.substring(0, MAX_PREVIEW_LINE_LENGTH) + '...';\n    }\n\n    return newString;\n  }\n\n  return (\n    <li\n      className={activeNote ? note.id === activeNote.id ? 'notes__item notes__item--active' : 'notes__item' : 'notes__item'}\n      onClick={() => onNoteItemClick(note)}\n      key={key}\n    >\n      <h3 className=\"notes__name\">{getFirstLineFromString(note.text)}</h3>\n    </li >\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeNote: getActiveNote(state),\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setActiveNote: (note) => dispatch(ActionCreatorNotes.setActiveNote(note)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotePreviewCard);\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport NotePreviewCard from \"../note-preview-card/note-preview-card.jsx\";\nimport {createNote, useFirstRender, usePrevious} from \"../../utils/common.js\";\nimport {ActionCreator as ActionCreatorNotes} from '../../reducer/notes/notes.js';\nimport {getActiveNote, getActiveFolder, getFilteredNotes, getNewNoteId} from \"../../reducer/notes/selectors.js\";\n\nfunction NotePreviewList({\n  notes,\n  filteredNotes,\n  activeNote,\n  activeFolder,\n  setNotes,\n  setActiveNote,\n  setNewNoteId,\n  newNoteId,\n  deleteNotes\n}) {\n\n  const [noteArrayNumber, setNoteArrayNumber] = useState(notes.indexOf(activeNote))\n  const [count, setCount] = useState(notes.length)\n\n  const firstRender = useFirstRender();\n  const prevCount = usePrevious(count);\n\n  //Hook that makes a newly created note an active one\n  useEffect(() => {\n    if (newNoteId && !firstRender) {\n      const newNote = notes.find(note => note.id === newNoteId)\n      setActiveNote(newNote)\n    }\n  }, [newNoteId]);\n\n  // Hook that sets the first activeNote on first render\n  useEffect(() => {\n    if (firstRender && !activeNote) {\n      setActiveNote(notes[0]);\n    }\n  });\n\n  //Hook that deletes empty notes on activeNote change\n  useEffect(() => {\n    const emptyNotes = notes.filter(note => note.text === '');\n\n    emptyNotes.length > 0 ?\n      deleteNotes(emptyNotes) : ``\n  }, [activeNote]);\n\n  // This hook is setting up the next closest note index number after any note deleted\n  useEffect(() => {\n    if (!activeNote) {\n      return\n    }\n\n    if (activeNote === null) {\n      setNoteArrayNumber(0)\n    }\n\n    // If there is filtered notes use them to calculate next active filtered note\n    if (filteredNotes) {\n      const index = filteredNotes.indexOf(activeNote)\n      if (index === filteredNotes.length - 1) {\n        setNoteArrayNumber(index - 1)\n      } else {\n        setNoteArrayNumber(index)\n      }\n      // If there is no filtered notes use unfiltered array of notes\n    } else {\n      const index = notes.indexOf(activeNote)\n      if (index === notes.length - 1) {\n        setNoteArrayNumber(index - 1)\n      } else {\n        setNoteArrayNumber(index)\n      }\n    }\n\n  }, [activeNote]);\n\n  // This hook updates notes count\n  useEffect(() => {\n    setCount(notes.length);\n  }, [notes.length]);\n\n  //This hook makes adjacent note active after activeNote deleted\n  //It fires only when note's count decreases\n  useEffect(() => {\n    if (!firstRender && notes.length > 0 && prevCount > count) {\n      setActiveNote(notes[noteArrayNumber])\n    }\n  }, [count]);\n\n  return (\n    <React.Fragment>\n      {\n        notes.length === 0 ?\n          <div className=\"notes__empty-cnt\">\n            <span className=\"notes__empty-text\">Нет заметок</span>\n            <button\n              onClick={() => createNote(setNotes, setNewNoteId, activeFolder)}\n              className=\"notes__create-note\">\n              Создать заметку\n            </button>\n          </div>\n          :\n          <ul className={`notes__list`}>\n            {notes ? filteredNotes ? filteredNotes.map(note =>\n              <NotePreviewCard\n                note={note}\n                key={note.id}\n                activeNote={activeNote}\n              />\n            ) : notes.map(note =>\n              <NotePreviewCard\n                note={note}\n                key={note.id}\n                activeNote={activeNote}\n              />\n            ) : ``}\n          </ul>\n      }\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeNote: getActiveNote(state),\n    activeFolder: getActiveFolder(state),\n    filteredNotes: getFilteredNotes(state),\n    newNoteId: getNewNoteId(state),\n  }\n}\n  ;\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    setNotesNumberToShow: (number) => dispatch(ActionCreatorNotes.setNotesNumberToShow(number)),\n    setNotes: (notes) => dispatch(ActionCreatorNotes.setNotes(notes)),\n    setNewNoteId: (note) => dispatch(ActionCreatorNotes.setNewNoteId(note)),\n    setActiveNote: (note) => dispatch(ActionCreatorNotes.setActiveNote(note)),\n    deleteNotes: (notes) => dispatch(ActionCreatorNotes.deleteNotes(notes)),\n  }\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotePreviewList);\n","import React, {useState, useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {Editor, EditorState, RichUtils, ContentState, KeyBindingUtil, Modifier, convertToRaw} from \"draft-js\";\nimport {ActionCreator as ActionCreatorNotes} from \"../../reducer/notes/notes.js\";\nimport {useFirstRender} from \"../../utils/common.js\";\nimport {getNotes, getActiveNote} from \"../../reducer/notes/selectors.js\";\n\n\nfunction RichEditor({activeNote, setNoteText, notes}) {\n  const [editorState, setEditorState] = useState(\n    () => activeNote ? EditorState.createWithContent(ContentState.createFromText(notes.find(x => x.id === activeNote.id).text)) : EditorState.createEmpty()\n  );\n  const firstRender = useFirstRender();\n\n  // Changing editor state on new ActiveNote and setting focus to the end of note\n  useEffect(() => {\n    if (!firstRender) {\n      setEditorState(EditorState.moveFocusToEnd(calcState(activeNote)));\n    }\n  }, [activeNote]);\n\n  useEffect(() => {\n    if (!activeNote) {\n      setEditorState(EditorState.createEmpty())\n    }\n  }, [activeNote]);\n\n  // Saving new note text on every change\n  useEffect(() => {\n    if (activeNote && !firstRender) {\n      const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\n      const mappedBlocks = blocks.map(\n        block => (!block.text.trim() && \"\") || block.text\n      );\n\n      let newText = \"\";\n      for (let i = 0; i < mappedBlocks.length; i++) {\n        const block = mappedBlocks[i];\n\n        // handle last block\n        if (i === mappedBlocks.length - 1) {\n          newText += block;\n        } else {\n          // otherwise we join with \\n, except if the block is already a \\n\n          if (block === \"\\n\") newText += block;\n          else newText += block + \"\\n\";\n        }\n      }\n\n      setNoteText({note: activeNote, text: newText});\n    }\n  }, [editorState.getCurrentContent()]);\n\n  const calcState = (value) => {\n    return value\n      ? EditorState.createWithContent(ContentState.createFromText(value.text))\n      : EditorState.createEmpty();\n  }\n\n  const onEditorChange = (editorState) => {\n    setEditorState(editorState);\n  }\n\n  const handleKeyCommand = (command) => {\n    if (command === 'split-block') {\n      const newEditorState = RichUtils.insertSoftNewline(editorState);\n      if (newEditorState !== editorState) {\n        setEditorState(newEditorState);\n      }\n\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  return (\n    <React.Fragment>\n      <Editor\n        editorState={editorState}\n        onChange={onEditorChange}\n        handleKeyCommand={handleKeyCommand}\n      />\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeNote: getActiveNote(state),\n    notes: getNotes(state),\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setNoteText: (payload) => dispatch(ActionCreatorNotes.setNoteText(payload)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RichEditor);\n","import React, {useEffect, useState, useRef} from \"react\";\nimport {ActionCreator as ActionCreatorNotes} from \"../../reducer/notes/notes\";\nimport {connect} from \"react-redux\";\nimport {ActionCreator as ActionCreatorInterface} from \"../../reducer/interface/interface\";\nimport {getNotes, getActiveNote} from \"../../reducer/notes/selectors.js\";\nimport {MOBILE_BREAKPOINT} from \"../../utils/const.js\";\n\n\nfunction NoteActionList({deleteNote, activeNote, setActiveNote, width, changeSidebarState}) {\n\n  const onCloseButtonClick = () => {\n    setActiveNote(null);\n  }\n\n  const onDeleteButtonClick = () => {\n    deleteNote(activeNote);\n  }\n\n  return (\n    <section className=\"action\">\n      {/* Check width to determine should we display the close button */}\n      {width < MOBILE_BREAKPOINT ?\n        <button onClick={onCloseButtonClick} className='action__button action__button--close'\n          aria-label=\"Закрыть Заметку\"></button>\n        : ``}\n      <button onClick={onDeleteButtonClick} className='action__button action__button--delete'\n        aria-label=\"Удалить Заметку\"></button>\n    </section>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    notes: getNotes(state),\n    activeNote: getActiveNote(state),\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteNote: (note) => dispatch(ActionCreatorNotes.deleteNote(note)),\n  setActiveNote: (id) => dispatch(ActionCreatorNotes.setActiveNote(id)),\n  changeSidebarState: () => dispatch(ActionCreatorInterface.changeSidebarState()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteActionList);\n\n","import NameSpace from './../name-space.js';\n\nexport const getSearchInput = (state) => state[NameSpace.SEARCH].searchInput;\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {ActionCreator as ActionCreatorSearch} from \"../../reducer/search/search.js\";\nimport {ActionCreator as ActionCreatorNotes} from \"../../reducer/notes/notes.js\";\nimport {getNotes} from \"../../reducer/notes/selectors.js\";\nimport {getSearchInput} from \"../../reducer/search/selectors.js\";\n\n\nconst Search = ({notes, setFilteredNotes, arrayToFilter, searchInput, setSearchInput}) => {\n\n  // Hook that removes filtered notes if there is no value inside search input\n  useEffect(() => {\n    searchInput.length === 0 ? setFilteredNotes(null) : ``;\n  }, [searchInput.length]);\n\n  // Hook that updates filteredNotes when notes or searchInput changes\n  useEffect(() => {\n    if (searchInput.length > 0) {\n      const filteredArray = arrayToFilter.filter((i) => {\n        return i.text.toUpperCase().includes(searchInput.toUpperCase());\n      })\n      setFilteredNotes(filteredArray);\n    }\n\n  }, [searchInput, notes])\n\n  let onSearchInputChange = (event) => {\n    setSearchInput(event.currentTarget.value);\n  }\n\n  let onRemoveButtonClick = () => {\n    setSearchInput('');\n    setFilteredNotes(null)\n  }\n\n  return (\n    <div className=\"search\">\n      <div className=\"search__icon search__icon--search\"></div>\n\n      {searchInput.length > 0 ?\n        <div onClick={onRemoveButtonClick} className=\"search__icon search__icon--clear\"></div> : ``\n      }\n\n      <input value={searchInput} onChange={(event) => onSearchInputChange(event)} className=\"search__input\"\n        placeholder=\"Поиск заметок\" />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchInput: getSearchInput(state),\n    notes: getNotes(state),\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFilteredNotes: (notes) => dispatch(ActionCreatorNotes.setFilteredNotes(notes)),\n  setSearchInput: (input) => dispatch(ActionCreatorSearch.setSearchInput(input)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport {ActionCreator as ActionCreatorNotes} from \"../../reducer/notes/notes\";\nimport {connect} from \"react-redux\";\nimport {createNote} from \"../../utils/common.js\"\nimport {} from \"../../reducer/notes/selectors.js\";\n\nfunction AddNote({setNotes, setNewNoteId, activeFolder}) {\n  return (\n    <div\n      onClick={() => createNote(setNotes, setNewNoteId, activeFolder)}\n      className=\"button button--add\"\n    >\n\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {}\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setNotes: (newNote) => dispatch(ActionCreatorNotes.setNotes(newNote)),\n  setNewNoteId: (id) => dispatch(ActionCreatorNotes.setNewNoteId(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNote)\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {ActionCreator as ActionCreatorInterface} from \"../../reducer/interface/interface.js\";\nimport {getNotes, getActiveNote} from \"../../reducer/notes/selectors.js\";\n\n\nfunction NoteMenuButton({changeSidebarState}) {\n\n  const menuButtonClickHandler = () => {\n    changeSidebarState();\n  }\n\n  return(\n    <button className=\"note-menu-btn\" onClick={menuButtonClickHandler} ></button>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notes: getNotes(state),\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n   changeSidebarState: () => dispatch(ActionCreatorInterface.changeSidebarState()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteMenuButton);\n","import React from 'react'\n\nfunction FolderItem({\n  activeFolder,\n  folderName,\n  count,\n  isDeleteMode,\n  canBeDeleted,\n  folderClickHandler,\n  deleteCallback,\n}) {\n  return (\n    <li\n      className={activeFolder === folderName ? \"sidebar__folder-item sidebar__folder-item--active\" : \"sidebar__folder-item\" }\n      onClick={() => folderClickHandler(folderName)}\n    >\n      {isDeleteMode && canBeDeleted &&\n        <div\n          className=\"button button--remove\"\n          onClick={(e) => deleteCallback(folderName, e)}\n        >\n\n        </div>\n      }\n      <p>{folderName}</p>\n      <span>{count}</span>\n    </li >\n  )\n}\n\nexport default FolderItem","import NameSpace from '../name-space.js';\n\nexport const getIsSidebarOpen = (state) => state[NameSpace.INTERFACE].isSidebarOpen;\n","import React, {useEffect, useState} from 'react';\nimport {ActionCreator as ActionCreatorInterface} from \"../../reducer/interface/interface.js\";\nimport {ActionCreator as ActionCreatorNotes} from \"../../reducer/notes/notes.js\";\nimport {connect} from \"react-redux\";\nimport FolderItem from '../folder-item/folder-item.js';\nimport {getNotes, getActiveFolder, getFolders} from \"../../reducer/notes/selectors.js\";\nimport {getIsSidebarOpen} from \"../../reducer/interface/selectors.js\";\n\n\nfunction Sidebar({\n  changeSidebarState,\n  isSidebarOpen,\n  addFolder,\n  activeFolder,\n  deleteFolder,\n  setActiveFolder,\n  setActiveNote,\n  folders,\n  notes\n}) {\n  const [sidebarUIState, changeSidebarUIState] = useState({\n    isNewFolderCreationMode: false,\n    isFolderDeleteMode: false,\n  })\n\n  const overlayClickHandler = () => {\n    changeSidebarState()\n  }\n\n  const closeSidebarOnKeydown = (event) => {\n    if (event.keyCode === 27) {\n      changeSidebarState()\n    }\n  }\n\n  let addFolderButtonClickHandler = (event) => {\n    event.stopPropagation()\n    changeSidebarUIState({...sidebarUIState, isNewFolderCreationMode: true})\n  }\n\n  let setDeleteFolderModeButtonClickHandler = (event) => {\n    event.stopPropagation()\n    changeSidebarUIState({...sidebarUIState, isFolderDeleteMode: !sidebarUIState.isFolderDeleteMode})\n  }\n\n  let onBlurHandler = (e) => {\n    if (!e.target.value <= 0) {\n      addFolder({name: e.target.value, canBeDeleted: true})\n      changeSidebarUIState({...sidebarUIState, isNewFolderCreationMode: false})\n    }\n    changeSidebarUIState({...sidebarUIState, isNewFolderCreationMode: false})\n  }\n\n  let onKeyDownHandler = (e) => {\n    if (e.key === 'Enter') {\n      if (!e.target.value <= 0) {\n        addFolder({name: e.target.value, canBeDeleted: true})\n        changeSidebarUIState({...sidebarUIState, isNewFolderCreationMode: false})\n\n      }\n      changeSidebarUIState({...sidebarUIState, isNewFolderCreationMode: false})\n    }\n  }\n\n  let deleteFolderButtonClickHandler = (folderName, e) => {\n    e.stopPropagation();\n    deleteFolder(folderName)\n    setActiveFolder('Все Заметки')\n    setActiveNote(notes[0])\n  }\n\n  let folderClickHandler = (folderName) => {\n    setActiveFolder(folderName)\n    setActiveNote(null)\n    changeSidebarState()\n  }\n\n  return (\n    <div onClick={overlayClickHandler} onKeyDown={(event) => closeSidebarOnKeydown()} className={isSidebarOpen ? 'overlay' : 'hidden'}>\n      <aside className=\"sidebar\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"sidebar__top\">\n          <h1>Папки</h1>\n          <div className=\"wrapper\">\n            <div\n              className={sidebarUIState.isFolderDeleteMode ?\n                \"button button--remove--active\" : \"button button--remove\"\n              }\n              onClick={setDeleteFolderModeButtonClickHandler}\n            ></div>\n            <div\n              className=\"button button--add\"\n              onClick={addFolderButtonClickHandler}\n            ></div>\n          </div>\n\n        </div>\n        <ul className=\"sidebar__folder-list\">\n          {folders && folders.map((folder) => {\n\n            let noteCount = notes.filter(note => note.inFolders.includes(folder.name)).length\n            return <FolderItem\n              activeFolder={activeFolder}\n              canBeDeleted={folder.canBeDeleted}\n              isDeleteMode={sidebarUIState.isFolderDeleteMode}\n              folderName={folder.name}\n              count={noteCount}\n              addCallback={addFolder}\n              folderClickHandler={folderClickHandler}\n              deleteCallback={deleteFolderButtonClickHandler}\n            />\n\n          })}\n          {sidebarUIState.isNewFolderCreationMode &&\n            <div className=\"sidebar__folder-item\">\n              <input\n                autoFocus\n                minlength=\"1\"\n                maxlength='15'\n                type=\"text\"\n                className=\"sidebar__folder-input\"\n                onBlur={onBlurHandler}\n                placeholder='назовите папку'\n                onKeyDown={onKeyDownHandler}\n              >\n              </input>\n            </div>\n          }\n\n        </ul>\n      </aside>\n    </div >\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notes: getNotes(state),\n    isSidebarOpen: getIsSidebarOpen(state),\n    activeFolder: getActiveFolder(state),\n    folders: getFolders(state)\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    changeSidebarState: () => dispatch(ActionCreatorInterface.changeSidebarState()),\n    addFolder: (name) => dispatch(ActionCreatorNotes.addFolder(name)),\n    deleteFolder: (name) => dispatch(ActionCreatorNotes.deleteFolder(name)),\n    setActiveFolder: (name) => dispatch(ActionCreatorNotes.setActiveFolder(name)),\n    setActiveNote: (name) => dispatch(ActionCreatorNotes.setActiveNote(name)),\n  }\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {throttle} from 'lodash';\nimport _debounce from 'lodash.debounce'\nimport NotePreviewList from \"../note-preview-list/note-preview-list.jsx\";\nimport RichEditor from \"../rich-editor/rich-editor.jsx\";\nimport NoteActionList from \"../note-action-list/note-action-list.jsx\";\nimport Search from \"../search/search.jsx\";\nimport AddNote from \"../add-note/add-note.jsx\";\nimport NoteMenuButton from \"../note-menu-button/note-menu-button.jsx\";\nimport Sidebar from \"../sidebar/sidebar.jsx\";\nimport {getNotes, getActiveNote, getActiveFolder} from \"../../reducer/notes/selectors.js\";\n\n\nfunction Main({notes, activeNote, activeFolder, isSidebarOpen}) {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n  const [filteredByFolderNotes, setFilteredByFolderNotes] = useState(notes)\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidthAndHeight);\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\n  });\n\n  useEffect(() => {\n    const handleResize = _debounce(() => setWidth(window.innerWidth), 100)\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    }\n  }, [])\n\n  const updateWidthAndHeight = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  };\n\n  // Хук Фильтрует заметки по активной папке\n  useEffect(() => {\n    setFilteredByFolderNotes(notes.filter(note => note.inFolders.includes(activeFolder)))\n  }, [activeFolder, notes]);\n\n  return (\n    <div className=\"container__main\" style={{\"maxHeight\": height, height: height}}>\n      <Sidebar />\n\n      {/* Левый главный контейнер */}\n      <section className={`container__left ${activeNote ? `container__left--hidden` : ``}`}>\n        <div className='container__left--top container__top'>\n          <div className=\"wrapper\">\n            <NoteMenuButton />\n            <h1 className=\"folder-title\">{activeFolder}</h1>\n          </div>\n          <AddNote\n            activeFolder={activeFolder}\n          />\n        </div>\n\n        <div className={notes.length === 0 ?\n          'container__left--bottom container__empty container__bottom' :\n          'container__left--bottom container__with-content container__bottom'}\n          style={{\"maxHeight\": height - 50}}\n        >\n          <Search arrayToFilter={filteredByFolderNotes} />\n          <NotePreviewList\n            notes={filteredByFolderNotes}\n          />\n\n        </div>\n      </section>\n\n      {/* Правый главный контейнер */}\n      <section className={`container__right ${!activeNote ? `container__right--hidden` : ``}`}>\n        <div className='container__right--top container__top'>\n          <NoteActionList width={width} />\n        </div>\n        <div className='container__right--bottom container__bottom'>\n          <RichEditor />\n        </div>\n      </section>\n      <span style={{display: 'none'}}>{width}</span>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notes: getNotes(state),\n    activeNote: getActiveNote(state),\n    activeFolder: getActiveFolder(state),\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  // resetActiveCard: () => dispatch(ActionCreatorCondition.resetActiveCard(dispatch)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React, {PureComponent} from 'react';\nimport {connect} from \"react-redux\";\nimport {Switch, Route, Router} from \"react-router-dom\";\nimport history from \"../../history.js\";\nimport Main from \"../main/main.jsx\";\nimport {notes} from \"../../utils/const.js\";\nimport {ActionCreator as ActionCreatorNotes} from \"../../reducer/notes/notes.js\";\nimport {getHasInitialNotesSet} from \"../../reducer/notes/selectors.js\";\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Main />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    hasInitialNotesSet: getHasInitialNotesSet(state),\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeHasInitialNotesSetFlag: () => dispatch(ActionCreatorNotes.changeHasInitialNotesSetFlag(dispatch)),\n  setNotes: (notes) => dispatch(ActionCreatorNotes.setNotes(notes)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reducer from \"./reducer/reducer.js\";\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {throttle} from \"lodash\";\nimport thunk from 'redux-thunk';\nimport {createAPI} from \"./api.js\";\nimport {loadState, saveState} from \"./reducer/local-storage.js\";\nimport App from \"./components/app/app.jsx\"\n\nconst persistedState = loadState();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({trace: true, traceLimit: 25}) || compose;\n\nconst store = createStore(\n  reducer,\n  persistedState,\n  composeEnhancers(\n    applyMiddleware(thunk),\n  )\n);\n\nstore.subscribe(throttle(() => {\n  saveState(store.getState());\n}, 1000));\n\nReactDOM.render(\n  <Provider store={store} basename={process.env.PUBLIC_URL}>\n    <App/>\n  </Provider>,\n  document.querySelector(`#root`)\n);\n\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializesState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializesState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n"],"sourceRoot":""}